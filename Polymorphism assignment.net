using System;

namespace EmployeeComparisonApp
{
    // Define an interface called IQuittable
    public interface IQuittable
    {
        // Define a void method called Quit
        void Quit();
    }

    // Modify the Employee class to inherit from IQuittable
    public class Employee : IQuittable
    {
        // Define properties for the Employee class
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }

        // Implement the Quit method from the IQuittable interface
        public void Quit()
        {
            // Display a message indicating the employee has quit
            Console.WriteLine($"{FirstName} {LastName} has quit the job.");
        }

        // Overload the == operator to compare two Employee objects by their Id property
        public static bool operator ==(Employee emp1, Employee emp2)
        {
            if (ReferenceEquals(emp1, emp2))
            {
                return true;
            }

            if (ReferenceEquals(emp1, null) || ReferenceEquals(emp2, null))
            {
                return false;
            }

            return emp1.Id == emp2.Id;
        }

        // Overload the != operator to compare two Employee objects by their Id property
        public static bool operator !=(Employee emp1, Employee emp2)
        {
            return !(emp1 == emp2);
        }

        // Override Equals() method to ensure it behaves consistently with the == operator
        public override bool Equals(object obj)
        {
            if (obj == null || !(obj is Employee))
            {
                return false;
            }

            return this.Id == ((Employee)obj).Id;
        }

        // Override GetHashCode() method to ensure objects used in collections behave correctly
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            // Instantiate two Employee objects
            Employee employee1 = new Employee() { Id = 1, FirstName = "John", LastName = "Doe" };
            Employee employee2 = new Employee() { Id = 2, FirstName = "Jane", LastName = "Smith" };

            // Compare the two Employee objects using the overloaded == operator
            bool areEqual = employee1 == employee2;
            // Display the result of the comparison
            Console.WriteLine("Are the two employees equal? " + areEqual);

            // Assign the same Id to both employees and compare again
            employee2.Id = 1;
            // Compare the two Employee objects again
            areEqual = employee1 == employee2;
            // Display the result of the comparison
            Console.WriteLine("Are the two employees equal after changing Id? " + areEqual);

            // Use polymorphism to create an object of type IQuittable
            IQuittable quittableEmployee = employee1;
            // Call the Quit method on the IQuittable object
            quittableEmployee.Quit();
        }
    }
}